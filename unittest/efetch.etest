#!/usr/bin/env bash

ETEST_efetch_md5_bogus()
{
    local tmpfile=$(mktemp --tmpdir etest-efetch-XXXXXX)
    touch ${tmpfile}.md5

    # efetch should fail b/c this isn't a valid MD5 file
    ! efetch -m file://${tmpfile}
}

ETEST_efetch_md5()
{
    local tmpfile=$(mktemp --tmpdir etest-efetch-XXXXXX)
    dd if=/dev/urandom of=${tmpfile} bs=1M count=2
    emd5sum ${tmpfile} > ${tmpfile}.md5

    efetch -m file://${tmpfile} copy.txt
    [[ -e copy.txt ]]
    [[ -e copy.txt.md5 ]]
    diff ${tmpfile} copy.txt
}

ETEST_efetch_md5_missing_md5()
{
    local tmpfile=$(mktemp --tmpdir etest-efetch-XXXXXX)
    dd if=/dev/urandom of=${tmpfile} bs=1M count=2

    # efetch should fail and both files should get removed
    ! efetch -m file://${tmpfile} copy.txt
    [[ ! -e copy.txt ]]
    [[ ! -e copy.txt.md5 ]]
}

ETEST_efetch_md5_missing_file()
{
    local tmpfile=$(mktemp --tmpdir etest-efetch-md5-XXXXXX)

    # efetch should fail and both files should get removed
    ! efetch -m file://${tmpfile%%.md5} copy.txt
    [[ ! -e copy.txt ]]
    [[ ! -e copy.txt.md5 ]]
}

ETEST_efetch_meta()
{
    local tmpfile=$(mktemp --tmpdir etest-efetch-XXXXXX)
    dd if=/dev/urandom of=${tmpfile} bs=1M count=2
    emetadata ${tmpfile} > ${tmpfile}.meta
    emetadata_check ${tmpfile}

    efetch -M file://${tmpfile} copy.txt
    [[ -e copy.txt ]]
    [[ -e copy.txt.meta ]]
    diff ${tmpfile} copy.txt

    emetadata_check copy.txt
}

ETEST_efetch_meta_pgp()
{
    [[ ${__BU_OS} == "Darwin" ]] && { ewarn "Test is disabled on Darwin per DT-188." ; return 0 ; }
    
    local gpgVer=$(gpg --version | grep GnuPG | sed 's/^gpg (GnuPG) //')
    if compare_version "${gpgVer}" ">=" "2.1" ; then
        ewarn "GPG version ${gpgVer} detected, test is disabled for versions 2.1 and later per EMBER-147"
        return 0
    fi

    # Grab public and private keys as well as passphrase
    efetch http://bdr-jenkins.den.solidfire.net:/keys/solidfire_packaging_public.asc  public.asc
    efetch http://bdr-jenkins.den.solidfire.net:/keys/solidfire_packaging_private.asc private.asc
    efetch http://bdr-jenkins.den.solidfire.net:/keys/solidfire_packaging.phrase      phrase.txt
    
    local tmpfile=$(mktemp --tmpdir etest-efetch-XXXXXX)
    dd if=/dev/urandom of=${tmpfile} bs=1M count=2
    emetadata -p="private.asc" -k="$(cat phrase.txt)" ${tmpfile} > ${tmpfile}.meta
    emetadata_check ${tmpfile}

    efetch --meta --public-key "public.asc" file://${tmpfile} copy.txt
    [[ -e copy.txt ]]
    [[ -e copy.txt.meta ]]
    diff ${tmpfile} copy.txt

    emetadata_check -p="public.asc" copy.txt
}

ETEST_efetch_missing_dir()
{
    local tmpfile=$(mktemp --tmpdir etest-efetch-XXXXXX)
    assert_not_exists "dest"

    # Try to fetch it to a non-existant directory. It should create it for us.
    efetch file://${tmpfile} "dest/sub1/sub2/file1.txt"
    assert_exists "dest/sub1/sub2/file1.txt"
    assert_directory_contents "dest" "sub1" "sub1/sub2" "sub1/sub2/file1.txt"
}
