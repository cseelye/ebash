#!/usr/bin/env bash

ETEST_assert_true()
{
    assert_true true
    $(tryrc assert_true false)
    [[ ${rc} -ne 0 ]]

    assert_true test a == a

    a=" 1 2 3 "
    b=" 4  5  6 "
    assert_true test "${a}" == "${a}"
    $(tryrc assert_true test "${a}" == "${b}")
    [[ ${rc} -ne 0 ]]
}

ETEST_assert_false()
{
    etestmsg "assert_false false is true"
    assert_false false

    etestmsg "assert_false true is false"
    $(tryrc assert_false true)
    [[ ${rc} -ne 0 ]]
}

ETEST_assert_empty()
{
    assert_empty ""
    assert_false assert_empty "a"
    assert_false assert_empty " "

    assert_empty "" "" ""
    assert_false assert_empty "" "" "a" "" ""
}

ETEST_assert_not_empty()
{
    assert_not_empty "a"
    assert_not_empty " "
    assert_false assert_not_empty ""

    assert_not_empty "a" "a" "a" "a" "a b"
    assert_false assert_not_empty "a" "a" "a" "" "a b" "a"
}

ETEST_assert_var_empty()
{
    local empty=""
    local not_empty="a"

    assert_var_empty empty
    assert_false assert_var_empty not_empty
}

ETEST_assert_exists()
{
    touch "file"
    assert_exists file
    rm "file"
    assert_false assert_exists file
}

ETEST_assert_exists_filename_with_whitespace()
{
    touch "a b"
    assert_exists "a b"
    rm "a b"
    assert_false assert_exists "a b"
}

ETEST_assert_not_exists()
{
    assert_not_exists "file"
    touch file
    assert_false assert_not_exists "file"
}

ETEST_assert_not_exists_filename_with_whitespace()
{
    touch "a b"
    assert_false assert_not_exists "a b"
    rm "a b"
    assert_not_exists "a b"
}

ETEST_assert_eq()
{
    assert_eq "a" "a"
    assert_eq "a b" "a b"
    assert_false assert_eq "a" "b"
    assert_false assert_eq "a b" "a"
}

ETEST_assert_ne()
{
    assert_ne "a" "b"
    assert_ne "a" "a b"
    assert_ne 0 1

    assert_false assert_ne "a" "a"
    assert_false assert_ne "a b" "a b"
}

ETEST_assert_match()
{
    assert_match "hallowed" "hall"
    assert_false assert_match "hall" "hallowed"

    assert_match "a b c" "b c"
    assert_false assert_match "c b a" "a b"
}

ETEST_assert_zero()
{
    assert_zero 0
    assert_false assert_zero 1
}

ETEST_assert_zero()
{
    assert_not_zero 1
    assert_false assert_not_zero 0
}

ETEST_assert_lt()
{
    assert_lt 1 2
    assert_false assert_lt 2 1
    assert_false assert_lt 2 2
}

ETEST_assert_le()
{
    assert_le 1 2
    assert_le 2 2
    assert_false assert_le 2 1
}

ETEST_assert_gt()
{
    assert_gt 2 1
    assert_false assert_gt 2 2
    assert_false assert_gt 2 10
}

ETEST_assert_ge()
{
    assert_ge 10 10
    assert_ge 10 1
    assert_false assert_ge 2 10
}
